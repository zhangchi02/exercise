<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- 配置bean id：id是唯一的，用于标识容器中的bean class：bean的完整（全）类名，提供给IOC创建对象 指定的类中必须包含无参构造器 -->
	<bean id="hello" class="com.zhc.spring.beans.HelloWorld">
		<!-- 属性注入：使用property元素 name：指定Bean的属性set方法后的名称（类似EL表达式） value：属性值 -->
		<property name="str2" value="tom"></property>
	</bean>
	<bean id="hello2" class="com.zhc.spring.beans.HelloWorld">
		<property name="str2" value="jarry"></property>
	</bean>

	<bean id="child" class="com.zhc.spring.beans.Child">
		<!-- 使用构造器来配置bean的属性 可以指定参数的位置、类型，以便于区分重载的构造器 -->
		<constructor-arg index="0" value="1"></constructor-arg>
		<constructor-arg value="tom"></constructor-arg>
		<constructor-arg type="java.lang.Integer" value="12"></constructor-arg>
		<constructor-arg type="java.lang.String" value="JiNan"></constructor-arg>
	</bean>
	
	<bean id="car2" class="com.zhc.spring.beans.Car">
		<property name="name" value="BMW"></property>
		<property name="price" value="1230000.00"></property>
	</bean>

	<bean id="adult" class="com.zhc.spring.beans.Adult">
		<property name="id" value="1"></property>
		<property name="name" value="tom"></property>
		<property name="age">
			<!-- 使用vlaue标签不需要使用双引号 -->
			<value>12</value>
		</property>
		<property name="address">
			<!-- 如有特殊字符，使用<![CDATA[...]]>把值包裹起来 -->
			<value><![CDATA[<~jinan!>]]></value>
		</property>
		<!-- 可以使用ref属性建立与外部bean之间的关系,（指向IOC容器中其它的bean） -->
		<property name="car" ref="car2"></property>
		<!-- 也可以使用<ref>标签指向IOC容器中其它的bean -->
		<property name="hw">
			<ref bean="hello" />
		</property>
	</bean>
	
	<bean id="adult2" class="com.zhc.spring.beans.Adult">
		<property name="id" value="2"></property>
		<property name="name">
			<value>张三</value>
		</property>
		<property name="age" value="20"></property>
		
		<property name="car" ref="car2"></property>
		<!-- 级联属性赋值 -->
		<property name="car.name" value="Audi"></property>
		
		<property name="hw">
			<bean class="com.zhc.spring.beans.HelloWorld">
				<property name="str2" value="hahaha"></property>
			</bean>
		</property>
	</bean>
	
	<!-- 配置单值集合属性 -->
	<bean id="person" class="com.zhc.spring.beans.Person">
		<property name="name" value="jack"></property>
		
		<property name="cars">
			<!-- 使用list节点，为List类型的属性赋值 -->
			<list>
				<ref bean="car2"/>
				<bean class="com.zhc.spring.beans.Car">
					<property name="name" value="Bentley"></property>
					<property name="price" value="12300000.00"></property>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 配置键值对集合属性 -->
	<bean id="person2" class="com.zhc.spring.beans.Person2">
		<property name="name" value="Alice"></property>
		
		<property name="cars">
			<!-- 使用map节点，为Map类型的属性赋值 -->
			<map>
				<!-- 使用entry节点为map添加键值对
					使用key、key-ref为键赋值（直接赋值或引用对象）
					使用value、value-ref为值赋值（直接赋值或引用对象）
				 -->
				<entry key="One" value-ref="car2"></entry>
				
				<entry key="Two">
					<bean class="com.zhc.spring.beans.Car">
						<property name="name" value="QQ"></property>
						<property name="price" value="12300.00"></property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>

	<!-- 配置Properties属性值 -->
	<bean id="dataSource" class="com.zhc.spring.beans.DataSource">
		<property name="properties">
			<!-- 使用props节点，为Properties类型的属性赋值 -->
			<props>
				<prop key="name">scott</prop>
				<prop key="password">tiger</prop>
				<prop key="url">jdbc:oracle:thin:@localhost:1521:orcl</prop>
				<prop key="driver">oracle.jdbc.driver.OracleDriver</prop>
			</props>
		</property>
	</bean>
	
	<!-- 通过“p命名空间”为属性赋值（配置文件默认已经添加）
		需要先导入xmlns:p="http://www.springframework.org/schema/p"
	 -->
	 <bean id="P_hw" class="com.zhc.spring.beans.HelloWorld"
	 	p:str2="p命名空间"></bean>
</beans>